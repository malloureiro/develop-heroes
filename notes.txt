
1- Criando um index.html, package.json, tsconfig.json, typings.json

2- Iniciando o NPM: npm init --yes

3- Baixando as dependências básicas para o desenvolvimento:
	npm install typescript --save-dev
	npm install typings --save-dev
	npm install lite-server --save-dev
	npm install concurrently --save-dev

	Mais informações em: https://angular.io/docs/ts/latest/guide/npm-packages.html

4- Baixando as dependências dos pacotes Angular (Polyfills packages):
	* A polyfill is a piece of code (or plugin) that provides the technology that you, the developer, expect the browser to provide natively.

	Por implementar ES6 features, é necessário instalar algumas APIs que irão prover ao browser a capacidade de compreender/executar algumas dessas features utilizadas pelo Angular2.
	Quando os browsers implementarem nativamente essas APIs (features), tais dependências serão desnecessárias.

	npm install core-js --save 
	npm install reflect-metadata --save
	npm install zone.js --save
	npm install rxjs@5.0.0-beta.12 --save (dependência do @angular/core)
	npm install systemjs --save

	Mais informações em: https://angular.io/docs/ts/latest/guide/npm-packages.html

5- Baixando os pacotes básicos do Angular para aplicações web:
	npm install @angular/core @angular/compiler @angular/commom @angular/platform-browser @angular/platform-browser-dynamic --save
	npm install @angular/http @angular/router @angular/forms @angular/upgrade --save

6- Rodar o typings install. Neste caso foi necessário apenas 'typings install dt~core-js'

7- Configurando o compilador Typescript em tsconfig.json. 
	Mais informações em https://angular.io/docs/ts/latest/guide/typescript-configuration.html#!#tsconfig

8- Criar o arquivo systemjs.config.js e adicionar a configuração informada através do Angular Quickstart.
	* O caminho da pasta onde os arquivos ts -> js serão compilados pode ser alterado.
	Por default o arquivo presente no Quickstart indica que o folder 'app' conterá os arquivos js, no entanto em tsconfig.json podemos alterar essa configuração ("outDir").

9- Criar os scripts, em package.json, que irão automatizar a compilação e o start do lite-server.

10- Inicializar o SystemJS no index.html e adicionar as tags script.
	* Todas os Polyfills baixados na etapa 4 devem ser adicionados ao index.html, com exceção do rxjs, que é utilizado como dependência dos pacotes de angular-core.
	Adicionar as tags <script> no body.



